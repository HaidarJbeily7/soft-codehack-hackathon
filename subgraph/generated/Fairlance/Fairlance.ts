// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Deposit extends ethereum.Event {
  get params(): Deposit__Params {
    return new Deposit__Params(this);
  }
}

export class Deposit__Params {
  _event: Deposit;

  constructor(event: Deposit) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class JobPosted extends ethereum.Event {
  get params(): JobPosted__Params {
    return new JobPosted__Params(this);
  }
}

export class JobPosted__Params {
  _event: JobPosted;

  constructor(event: JobPosted) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get title(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get description(): string {
    return this._event.parameters[2].value.toString();
  }

  get deadline(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get minimumPrice(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get maximumPrice(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get inProgress(): boolean {
    return this._event.parameters[6].value.toBoolean();
  }

  get isDone(): boolean {
    return this._event.parameters[7].value.toBoolean();
  }

  get owner(): Address {
    return this._event.parameters[8].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProposalSent extends ethereum.Event {
  get params(): ProposalSent__Params {
    return new ProposalSent__Params(this);
  }
}

export class ProposalSent__Params {
  _event: ProposalSent;

  constructor(event: ProposalSent) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get jobId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get cost(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get details(): string {
    return this._event.parameters[4].value.toString();
  }

  get expectedFinishDate(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get receiver(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Withdrawal extends ethereum.Event {
  get params(): Withdrawal__Params {
    return new Withdrawal__Params(this);
  }
}

export class Withdrawal__Params {
  _event: Withdrawal;

  constructor(event: Withdrawal) {
    this._event = event;
  }

  get receiver(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Fairlance__getJobByIdResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get title(): string {
    return this[1].toString();
  }

  get description(): string {
    return this[2].toString();
  }

  get deadline(): BigInt {
    return this[3].toBigInt();
  }

  get minimumPrice(): BigInt {
    return this[4].toBigInt();
  }

  get maximumPrice(): BigInt {
    return this[5].toBigInt();
  }

  get inProgress(): boolean {
    return this[6].toBoolean();
  }

  get isDone(): boolean {
    return this[7].toBoolean();
  }

  get owner(): Address {
    return this[8].toAddress();
  }
}

export class Fairlance__jobIdToJobResult {
  value0: BigInt;
  value1: string;
  value2: string;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: boolean;
  value7: boolean;
  value8: Address;

  constructor(
    value0: BigInt,
    value1: string,
    value2: string,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: boolean,
    value7: boolean,
    value8: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromBoolean(this.value6));
    map.set("value7", ethereum.Value.fromBoolean(this.value7));
    map.set("value8", ethereum.Value.fromAddress(this.value8));
    return map;
  }

  getId(): BigInt {
    return this.value0;
  }

  getTitle(): string {
    return this.value1;
  }

  getDescription(): string {
    return this.value2;
  }

  getDeadline(): BigInt {
    return this.value3;
  }

  getMinimumPrice(): BigInt {
    return this.value4;
  }

  getMaximumPrice(): BigInt {
    return this.value5;
  }

  getInProgress(): boolean {
    return this.value6;
  }

  getIsDone(): boolean {
    return this.value7;
  }

  getOwner(): Address {
    return this.value8;
  }
}

export class Fairlance__proposalIdToProposalResult {
  value0: BigInt;
  value1: BigInt;
  value2: Address;
  value3: BigInt;
  value4: string;
  value5: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: Address,
    value3: BigInt,
    value4: string,
    value5: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromString(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }

  getId(): BigInt {
    return this.value0;
  }

  getJobId(): BigInt {
    return this.value1;
  }

  getSender(): Address {
    return this.value2;
  }

  getCost(): BigInt {
    return this.value3;
  }

  getDetails(): string {
    return this.value4;
  }

  getExpectedFinishDate(): BigInt {
    return this.value5;
  }
}

export class Fairlance extends ethereum.SmartContract {
  static bind(address: Address): Fairlance {
    return new Fairlance("Fairlance", address);
  }

  balances(param0: Address): BigInt {
    let result = super.call("balances", "balances(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_balances(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balances", "balances(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getJobById(_id: BigInt): Fairlance__getJobByIdResultValue0Struct {
    let result = super.call(
      "getJobById",
      "getJobById(uint256):((uint256,string,string,uint256,uint256,uint256,bool,bool,address))",
      [ethereum.Value.fromUnsignedBigInt(_id)]
    );

    return changetype<Fairlance__getJobByIdResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getJobById(
    _id: BigInt
  ): ethereum.CallResult<Fairlance__getJobByIdResultValue0Struct> {
    let result = super.tryCall(
      "getJobById",
      "getJobById(uint256):((uint256,string,string,uint256,uint256,uint256,bool,bool,address))",
      [ethereum.Value.fromUnsignedBigInt(_id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Fairlance__getJobByIdResultValue0Struct>(value[0].toTuple())
    );
  }

  jobIdToJob(param0: BigInt): Fairlance__jobIdToJobResult {
    let result = super.call(
      "jobIdToJob",
      "jobIdToJob(uint256):(uint256,string,string,uint256,uint256,uint256,bool,bool,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new Fairlance__jobIdToJobResult(
      result[0].toBigInt(),
      result[1].toString(),
      result[2].toString(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBoolean(),
      result[7].toBoolean(),
      result[8].toAddress()
    );
  }

  try_jobIdToJob(
    param0: BigInt
  ): ethereum.CallResult<Fairlance__jobIdToJobResult> {
    let result = super.tryCall(
      "jobIdToJob",
      "jobIdToJob(uint256):(uint256,string,string,uint256,uint256,uint256,bool,bool,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Fairlance__jobIdToJobResult(
        value[0].toBigInt(),
        value[1].toString(),
        value[2].toString(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBoolean(),
        value[7].toBoolean(),
        value[8].toAddress()
      )
    );
  }

  onholdBalances(param0: Address): BigInt {
    let result = super.call(
      "onholdBalances",
      "onholdBalances(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_onholdBalances(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "onholdBalances",
      "onholdBalances(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proposalIdToProposal(param0: BigInt): Fairlance__proposalIdToProposalResult {
    let result = super.call(
      "proposalIdToProposal",
      "proposalIdToProposal(uint256):(uint256,uint256,address,uint256,string,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new Fairlance__proposalIdToProposalResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toAddress(),
      result[3].toBigInt(),
      result[4].toString(),
      result[5].toBigInt()
    );
  }

  try_proposalIdToProposal(
    param0: BigInt
  ): ethereum.CallResult<Fairlance__proposalIdToProposalResult> {
    let result = super.tryCall(
      "proposalIdToProposal",
      "proposalIdToProposal(uint256):(uint256,uint256,address,uint256,string,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Fairlance__proposalIdToProposalResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toAddress(),
        value[3].toBigInt(),
        value[4].toString(),
        value[5].toBigInt()
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptProposalCall extends ethereum.Call {
  get inputs(): AcceptProposalCall__Inputs {
    return new AcceptProposalCall__Inputs(this);
  }

  get outputs(): AcceptProposalCall__Outputs {
    return new AcceptProposalCall__Outputs(this);
  }
}

export class AcceptProposalCall__Inputs {
  _call: AcceptProposalCall;

  constructor(call: AcceptProposalCall) {
    this._call = call;
  }

  get _proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AcceptProposalCall__Outputs {
  _call: AcceptProposalCall;

  constructor(call: AcceptProposalCall) {
    this._call = call;
  }
}

export class CompleteJobCall extends ethereum.Call {
  get inputs(): CompleteJobCall__Inputs {
    return new CompleteJobCall__Inputs(this);
  }

  get outputs(): CompleteJobCall__Outputs {
    return new CompleteJobCall__Outputs(this);
  }
}

export class CompleteJobCall__Inputs {
  _call: CompleteJobCall;

  constructor(call: CompleteJobCall) {
    this._call = call;
  }

  get _jobId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CompleteJobCall__Outputs {
  _call: CompleteJobCall;

  constructor(call: CompleteJobCall) {
    this._call = call;
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class PostJobCall extends ethereum.Call {
  get inputs(): PostJobCall__Inputs {
    return new PostJobCall__Inputs(this);
  }

  get outputs(): PostJobCall__Outputs {
    return new PostJobCall__Outputs(this);
  }
}

export class PostJobCall__Inputs {
  _call: PostJobCall;

  constructor(call: PostJobCall) {
    this._call = call;
  }

  get _title(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _description(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _deadline(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _minimumPrice(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _maximumPrice(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class PostJobCall__Outputs {
  _call: PostJobCall;

  constructor(call: PostJobCall) {
    this._call = call;
  }
}

export class ReleaseOnHoldBalanceCall extends ethereum.Call {
  get inputs(): ReleaseOnHoldBalanceCall__Inputs {
    return new ReleaseOnHoldBalanceCall__Inputs(this);
  }

  get outputs(): ReleaseOnHoldBalanceCall__Outputs {
    return new ReleaseOnHoldBalanceCall__Outputs(this);
  }
}

export class ReleaseOnHoldBalanceCall__Inputs {
  _call: ReleaseOnHoldBalanceCall;

  constructor(call: ReleaseOnHoldBalanceCall) {
    this._call = call;
  }

  get _jobId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ReleaseOnHoldBalanceCall__Outputs {
  _call: ReleaseOnHoldBalanceCall;

  constructor(call: ReleaseOnHoldBalanceCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SendProposalCall extends ethereum.Call {
  get inputs(): SendProposalCall__Inputs {
    return new SendProposalCall__Inputs(this);
  }

  get outputs(): SendProposalCall__Outputs {
    return new SendProposalCall__Outputs(this);
  }
}

export class SendProposalCall__Inputs {
  _call: SendProposalCall;

  constructor(call: SendProposalCall) {
    this._call = call;
  }

  get _jobId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _cost(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _details(): string {
    return this._call.inputValues[2].value.toString();
  }

  get expectedFinishDate(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class SendProposalCall__Outputs {
  _call: SendProposalCall;

  constructor(call: SendProposalCall) {
    this._call = call;
  }
}

export class TransferCall extends ethereum.Call {
  get inputs(): TransferCall__Inputs {
    return new TransferCall__Inputs(this);
  }

  get outputs(): TransferCall__Outputs {
    return new TransferCall__Outputs(this);
  }
}

export class TransferCall__Inputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get receiver(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TransferCall__Outputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
