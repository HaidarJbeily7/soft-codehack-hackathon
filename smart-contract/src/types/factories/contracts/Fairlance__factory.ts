/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Fairlance, FairlanceInterface } from "../../contracts/Fairlance";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minimumPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maximumPrice",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "inProgress",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isDone",
            type: "bool",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        indexed: true,
        internalType: "struct Fairlance.Job",
        name: "job",
        type: "tuple",
      },
    ],
    name: "JobPosted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "jobId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "cost",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "details",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "expectedFinishDate",
            type: "uint256",
          },
        ],
        indexed: true,
        internalType: "struct Fairlance.Proposal",
        name: "proposal",
        type: "tuple",
      },
    ],
    name: "ProposalSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
    ],
    name: "acceptProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_jobId",
        type: "uint256",
      },
    ],
    name: "completeJob",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getJobById",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minimumPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maximumPrice",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "inProgress",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isDone",
            type: "bool",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct Fairlance.Job",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "jobIdToJob",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minimumPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maximumPrice",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "inProgress",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isDone",
        type: "bool",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "onholdBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minimumPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumPrice",
        type: "uint256",
      },
    ],
    name: "postJob",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposalIdToProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "details",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "expectedFinishDate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_jobId",
        type: "uint256",
      },
    ],
    name: "releaseOnHoldBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_jobId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cost",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_details",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "expectedFinishDate",
        type: "uint256",
      },
    ],
    name: "sendProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50338061003757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100408161004e565b50600180805560025561009e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611e15806100ad6000396000f3fe6080604052600436106100f35760003560e01c806369d7428f1161008a578063a9059cbb11610059578063a9059cbb146102c2578063c035e492146102e2578063d0e30db01461030f578063f2fde38b1461031757600080fd5b806369d7428f14610238578063715018a6146102655780638da5cb5b1461027a578063a1c0d32f146102a257600080fd5b80632e1a7d4d116100c65780632e1a7d4d146101a65780635152ed1d146101c657806357cd642c146101f857806360c5cc3a1461021857600080fd5b806309bb238e146100f857806312d4d6eb146101365780631d137deb1461014b57806327e235e31461016b575b600080fd5b34801561010457600080fd5b50610118610113366004611744565b610337565b60405161012d999897969594939291906117ad565b60405180910390f35b6101496101443660046118be565b6104a1565b005b34801561015757600080fd5b50610149610166366004611744565b610655565b34801561017757600080fd5b50610198610186366004611959565b60036020526000908152604090205481565b60405190815260200161012d565b3480156101b257600080fd5b506101496101c1366004611744565b6106dc565b3480156101d257600080fd5b506101e66101e1366004611744565b6107ca565b60405161012d9695949392919061197b565b34801561020457600080fd5b506101496102133660046119c1565b610893565b34801561022457600080fd5b50610149610233366004611744565b610c72565b34801561024457600080fd5b50610258610253366004611744565b610f4f565b60405161012d9190611a19565b34801561027157600080fd5b50610149611195565b34801561028657600080fd5b506000546040516001600160a01b03909116815260200161012d565b3480156102ae57600080fd5b506101496102bd366004611744565b6111a9565b3480156102ce57600080fd5b506101496102dd366004611ac2565b6114c5565b3480156102ee57600080fd5b506101986102fd366004611959565b60046020526000908152604090205481565b6101496115f1565b34801561032357600080fd5b50610149610332366004611959565b611689565b6005602052600090815260409020805460018201805491929161035990611aec565b80601f016020809104026020016040519081016040528092919081815260200182805461038590611aec565b80156103d25780601f106103a7576101008083540402835291602001916103d2565b820191906000526020600020905b8154815290600101906020018083116103b557829003601f168201915b5050505050908060020180546103e790611aec565b80601f016020809104026020016040519081016040528092919081815260200182805461041390611aec565b80156104605780601f1061043557610100808354040283529160200191610460565b820191906000526020600020905b81548152906001019060200180831161044357829003601f168201915b505050506003830154600484015460058501546006909501549394919390925060ff808216916101008104909116906201000090046001600160a01b031689565b600a5460ff16156104cd5760405162461bcd60e51b81526004016104c490611b20565b60405180910390fd5b600a805460ff19166001179055336000908152600360205260409020548111156105525760405162461bcd60e51b815260206004820152603060248201527f796f752073686f756c64206861766520746865206d6178696d756d507269636560448201526f20696e20796f75722062616c616e636560801b60648201526084016104c4565b60408051610120810182526001805480835260208084018a9052838501899052606084018890526080840187905260a08401869052600060c0850181905260e085018190523361010086015291825260089052928320839055805491926105b883611b5e565b909155505033600090815260046020526040812080548492906105dc908490611b77565b90915550503360009081526003602052604081208054849290610600908490611b90565b9091555050604051610613908290611ba3565b604051908190038120907fe84dd011069deb06a81859c4740ae9fa39ac9ace6f51f930e201feb431c18f1890600090a25050600a805460ff1916905550505050565b61065d6116c7565b600061066882610f4f565b60a08101516101008201516001600160a01b031660009081526004602052604081208054939450919261069c908490611b90565b909155505060a08101516101008201516001600160a01b0316600090815260036020526040812080549091906106d3908490611b77565b90915550505050565b600a5460ff16156106ff5760405162461bcd60e51b81526004016104c490611b20565b600a805460ff19166001179055336000908152600360205260409020548111156107605760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b60448201526064016104c4565b60408051338152602081018390527f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65910160405180910390a133600090815260036020526040812080548392906107b8908490611b90565b9091555050600a805460ff1916905550565b60066020526000908152604090208054600182015460028301546003840154600485018054949593946001600160a01b0390931693919261080a90611aec565b80601f016020809104026020016040519081016040528092919081815260200182805461083690611aec565b80156108835780601f1061085857610100808354040283529160200191610883565b820191906000526020600020905b81548152906001019060200180831161086657829003601f168201915b5050505050908060050154905086565b600061089e85610f4f565b90508060e00151156109005760405162461bcd60e51b815260206004820152602560248201527f43616e6e6f742073656e642070726f706f73616c20746f20636f6d706c65746560448201526432103537b160d91b60648201526084016104c4565b8060c00151156109615760405162461bcd60e51b815260206004820152602660248201527f43616e6e6f742073656e642070726f706f73616c20746f20696e70726f67726560448201526539b9903537b160d11b60648201526084016104c4565b4282116109c35760405162461bcd60e51b815260206004820152602a60248201527f657870656374656446696e697368446174652073686f756c6420626520696e206044820152697468652066757475726560b01b60648201526084016104c4565b80606001518210610a2b5760405162461bcd60e51b815260206004820152602c60248201527f657870656374656446696e697368446174652073686f756c642062652062656660448201526b6f726520646561646c696e6560a01b60648201526084016104c4565b8060a001518411158015610a43575080608001518410155b610aac5760405162461bcd60e51b815260206004820152603460248201527f436f73742073686f756c64206265206265747765656e206d6178696d756d507260448201527369636520616e64206d696e696d756d507269636560601b60648201526084016104c4565b60006040518060c001604052806002548152602001878152602001336001600160a01b0316815260200186815260200185815260200184815250905060016008600060015481526020019081526020016000206000828254610b0e9190611b77565b9091555050600180546000908152600760209081526040808320805480860182559084529282902085516006909402019283559084015192820192909255908201516002820180546001600160a01b0319166001600160a01b039092169190911790556060820151600382015560808201518291906004820190610b929082611cb8565b5060a0919091015160059091015560028054600090815260066020908152604091829020845181559084015160018201559083015191810180546001600160a01b0319166001600160a01b03909316929092179091556060820151600382015560808201518291906004820190610c099082611cb8565b5060a0919091015160059091015560028054906000610c2783611b5e565b919050555080604051610c3a9190611d78565b604051908190038120907f2e0eeec062ec1f1b206c9575e2c4525f232eb2b2b47c84f865ba44a6cfe289ea90600090a2505050505050565b806002548110610cba5760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a5908141c9bdc1bdcd85b081259606a1b60448201526064016104c4565b6000828152600660209081526040808320815160c0810183528154815260018201549381019390935260028101546001600160a01b03169183019190915260038101546060830152600481018054608084019190610d1790611aec565b80601f0160208091040260200160405190810160405280929190818152602001828054610d4390611aec565b8015610d905780601f10610d6557610100808354040283529160200191610d90565b820191906000526020600020905b815481529060010190602001808311610d7357829003601f168201915b5050505050815260200160058201548152505090506000610db48260200151610f4f565b600160c0820181905281516000908152600560209081526040909120835181559083015192935083929091820190610dec9082611cb8565b5060408201516002820190610e019082611cb8565b50606082015160038201556080820151600482015560a0820151600582015560c08201516006909101805460e08401516101009485015161ffff1990921693151561ff0019169390931792151584029290921762010000600160b01b031916620100006001600160a01b03938416021790559082015133911614610ed35760405162461bcd60e51b815260206004820152602360248201527f4f6e6c79204a6f62206f776e65722063616e2074616b6520746869732061637460448201526234b7b760e91b60648201526084016104c4565b60208281018051600090815260099092526040918290208451815590516001820155908301516002820180546001600160a01b0319166001600160a01b039092169190911790556060830151600382015560808301518391906004820190610f3b9082611cb8565b5060a0820151816005015590505050505050565b610fab60405180610120016040528060008152602001606081526020016060815260200160008152602001600081526020016000815260200160001515815260200160001515815260200160006001600160a01b031681525090565b816001548110610fee5760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908129bd888125960921b60448201526064016104c4565b60056000848152602001908152602001600020604051806101200160405290816000820154815260200160018201805461102790611aec565b80601f016020809104026020016040519081016040528092919081815260200182805461105390611aec565b80156110a05780601f10611075576101008083540402835291602001916110a0565b820191906000526020600020905b81548152906001019060200180831161108357829003601f168201915b505050505081526020016002820180546110b990611aec565b80601f01602080910402602001604051908101604052809291908181526020018280546110e590611aec565b80156111325780601f1061110757610100808354040283529160200191611132565b820191906000526020600020905b81548152906001019060200180831161111557829003601f168201915b505050918352505060038201546020820152600482015460408201526005820154606082015260069091015460ff80821615156080840152610100820416151560a08301526201000090046001600160a01b031660c09091015291505b50919050565b61119d6116c7565b6111a760006116f4565b565b600a5460ff16156111cc5760405162461bcd60e51b81526004016104c490611b20565b600a805460ff1916600117905560006111e482610f4f565b90508061010001516001600160a01b0316336001600160a01b03161461125a5760405162461bcd60e51b815260206004820152602560248201527f4f6e6c79204a6f62206f776e65722063616e206163636573732074686973206160448201526431ba34b7b760d91b60648201526084016104c4565b600160e08201819052600060c08301819052838152600560209081526040909120835181559083015183928201906112929082611cb8565b50604082015160028201906112a79082611cb8565b5060608281015160038381019190915560808085015160048086019190915560a0860151600586015560c0808701516006909601805460e0890151610100998a015161ffff1990921698151561ff001916989098179715159098029690961762010000600160b01b031916620100006001600160a01b039889160217909555600088815260096020908152604080832081519889018252805489526001810154928901929092526002820154909816978701979097529286015493850193909352918401805491949284019161137c90611aec565b80601f01602080910402602001604051908101604052809291908181526020018280546113a890611aec565b80156113f55780601f106113ca576101008083540402835291602001916113f5565b820191906000526020600020905b8154815290600101906020018083116113d857829003601f168201915b5050505050815260200160058201548152505090508160a0015160046000336001600160a01b03166001600160a01b0316815260200190815260200160002060008282546114439190611b90565b9091555050606081015160a083015161145c9190611b90565b336000908152600360205260408120805490919061147b908490611b77565b909155505060608101516040808301516001600160a01b03166000908152600360205290812080549091906114b1908490611b77565b9091555050600a805460ff19169055505050565b600a5460ff16156114e85760405162461bcd60e51b81526004016104c490611b20565b600a805460ff19166001179055336000908152600360205260409020548111156115495760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b60448201526064016104c4565b604080513381526001600160a01b03841660208201529081018290527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060600160405180910390a133600090815260036020526040812080548392906115b1908490611b90565b90915550506001600160a01b038216600090815260036020526040812080548392906115de908490611b77565b9091555050600a805460ff191690555050565b600a5460ff16156116145760405162461bcd60e51b81526004016104c490611b20565b600a805460ff19166001179055604080513381523460208201527fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c910160405180910390a13360009081526003602052604081208054349290611678908490611b77565b9091555050600a805460ff19169055565b6116916116c7565b6001600160a01b0381166116bb57604051631e4fbdf760e01b8152600060048201526024016104c4565b6116c4816116f4565b50565b6000546001600160a01b031633146111a75760405163118cdaa760e01b81523360048201526024016104c4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561175657600080fd5b5035919050565b60005b83811015611778578181015183820152602001611760565b50506000910152565b6000815180845261179981602086016020860161175d565b601f01601f19169290920160200192915050565b60006101208b83528060208401526117c78184018c611781565b905082810360408401526117db818b611781565b60608401999099525050608081019590955260a085019390935290151560c0840152151560e08301526001600160a01b0316610100909101529392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261184257600080fd5b813567ffffffffffffffff8082111561185d5761185d61181b565b604051601f8301601f19908116603f011681019082821181831017156118855761188561181b565b8160405283815286602085880101111561189e57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a086880312156118d657600080fd5b853567ffffffffffffffff808211156118ee57600080fd5b6118fa89838a01611831565b9650602088013591508082111561191057600080fd5b5061191d88828901611831565b959895975050505060408401359360608101359360809091013592509050565b80356001600160a01b038116811461195457600080fd5b919050565b60006020828403121561196b57600080fd5b6119748261193d565b9392505050565b86815285602082015260018060a01b038516604082015283606082015260c0608082015260006119ae60c0830185611781565b90508260a0830152979650505050505050565b600080600080608085870312156119d757600080fd5b8435935060208501359250604085013567ffffffffffffffff8111156119fc57600080fd5b611a0887828801611831565b949793965093946060013593505050565b602081528151602082015260006020830151610120806040850152611a42610140850183611781565b91506040850151601f19858403016060860152611a5f8382611781565b92505060608501516080850152608085015160a085015260a085015160c085015260c0850151611a9360e086018215159052565b5060e0850151610100611aa98187018315159052565b909501516001600160a01b031693019290925250919050565b60008060408385031215611ad557600080fd5b611ade8361193d565b946020939093013593505050565b600181811c90821680611b0057607f821691505b60208210810361118f57634e487b7160e01b600052602260045260246000fd5b6020808252600e908201526d4e6f2072652d656e7472616e637960901b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600060018201611b7057611b70611b48565b5060010190565b80820180821115611b8a57611b8a611b48565b92915050565b81810381811115611b8a57611b8a611b48565b8151815260006020808401518051611bc08184870185850161175d565b601f19915081601f8201168501905060408601518051611be58186850187850161175d565b611c5d611c46611c37611c28611c1b611c0e8a8a601f8901168a010160608f0151815260200190565b60808e0151815260200190565b60a08d0151815260200190565b60c08c01511515815260200190565b60e08b01511515815260200190565b6101008a01516001600160a01b0316815260200190565b98975050505050505050565b601f821115611cb357600081815260208120601f850160051c81016020861015611c905750805b601f850160051c820191505b81811015611caf57828155600101611c9c565b5050505b505050565b815167ffffffffffffffff811115611cd257611cd261181b565b611ce681611ce08454611aec565b84611c69565b602080601f831160018114611d1b5760008415611d035750858301515b600019600386901b1c1916600185901b178555611caf565b600085815260208120601f198616915b82811015611d4a57888601518255948401946001909101908401611d2b565b5085821015611d685787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b815181526020820151602082015260018060a01b03604083015116604082015260608201516060820152600060808301518051611dbc81608086016020850161175d565b60a0948501516080601f92909201601f191694909401908101939093525050019056fea2646970667358221220438cdf3f5665c953ec546d2d5246572b4eb81b97ef7ab117314c4139781f165c64736f6c63430008140033";

type FairlanceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FairlanceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Fairlance__factory extends ContractFactory {
  constructor(...args: FairlanceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Fairlance & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Fairlance__factory {
    return super.connect(runner) as Fairlance__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FairlanceInterface {
    return new Interface(_abi) as FairlanceInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Fairlance {
    return new Contract(address, _abi, runner) as unknown as Fairlance;
  }
}
